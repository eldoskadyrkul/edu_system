-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1
-- Время создания: Май 23 2019 г., 11:43
-- Версия сервера: 10.1.36-MariaDB
-- Версия PHP: 5.6.38

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `bilim_edu`
--

-- --------------------------------------------------------

--
-- Структура таблицы `admin_infos`
--

CREATE TABLE `admin_infos` (
  `id` int(10) UNSIGNED NOT NULL,
  `firstname` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `lastname` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `gender` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `admin_birthday` date NOT NULL,
  `mobile_phone` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `address` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(10) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `admin_infos`
--

INSERT INTO `admin_infos` (`id`, `firstname`, `lastname`, `gender`, `admin_birthday`, `mobile_phone`, `address`, `user_id`, `created_at`, `updated_at`) VALUES
(1, 'Михайлов', 'Алексей', 'Мужской', '1958-03-29', '89011642314', 'город Москва, улица Октябрьская дом 20 квартира 58', 3, '2019-05-10 13:35:57', '2019-05-10 13:35:57');

-- --------------------------------------------------------

--
-- Структура таблицы `info_people`
--

CREATE TABLE `info_people` (
  `id` int(10) UNSIGNED NOT NULL,
  `firstname` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `lastname` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `date_birth` date NOT NULL,
  `speciality` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `address` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `mobile_phone` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` int(10) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `info_people`
--

INSERT INTO `info_people` (`id`, `firstname`, `lastname`, `date_birth`, `speciality`, `address`, `mobile_phone`, `user_id`, `created_at`, `updated_at`) VALUES
(1, 'Омиралиев', 'Мурат', '2003-06-17', 'Информационные системы', 'город Актау, проспект Халык дом 34 \"а\"', '87025465123', 1, '2019-05-07 13:16:41', '2019-05-07 13:16:41'),
(2, 'Коновеев', 'Максим', '1996-02-10', 'Физика', 'Республика Казахстан, город Алматы, проспект Достык 49', '87052145546', 5, '2019-05-21 13:44:49', '2019-05-21 13:44:49'),
(3, 'Михайлов', 'Роман', '1998-05-26', 'Графический дизайнер', 'Республика Казахстан, город Петропавловск, улица Молодежная 40', '87015465841', 6, '2019-05-21 22:19:06', '2019-05-21 22:19:06'),
(4, 'Сергей', 'Романенский', '1999-09-06', 'Биология', 'город Алматы, улица Фрунзе, 41', '87051145652', 7, '2019-05-23 03:29:20', '2019-05-23 03:29:20'),
(5, 'Таниберген', 'Асхат', '2002-03-26', 'Архитектор', 'город Шымкент, улица Победы 49 квартира 024', '87016587941', 8, '2019-05-23 03:37:44', '2019-05-23 03:37:44');

-- --------------------------------------------------------

--
-- Структура таблицы `lectures`
--

CREATE TABLE `lectures` (
  `id` int(10) UNSIGNED NOT NULL,
  `name_lectures` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `description_lectures` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `url_lectures` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `short_desc` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `lectures`
--

INSERT INTO `lectures` (`id`, `name_lectures`, `description_lectures`, `url_lectures`, `short_desc`, `created_at`, `updated_at`) VALUES
(1, 'Формирование Photoshop-системы', '<p>Подбор компонентов Photoshop &ndash; необыкновенно богатая программа, и эта книга призвана помочь вам научиться использовать ее возможности с максимальной эффективностью. Однако никакие советы, подсказки и трюки, как бы хороши они не были, не помогут, если ваши аппаратные средства не отвечают поставленной задаче или система сконфигурирована неправильно. В этой лекции мы рассмотрим, как сформировать среду для работы с Photoshop. Сначала поговорим об аппаратных средствах, необходимых для нормального функционирования, а потом коснемся некоторых вспомогательных программ, которые могут оказаться вам полезными.</p>\r\n<p>Оборудование Photoshop использует все преимущества быстродействующих систем Macintosh и РС &ndash; чем быстрее система, тем лучше. Но скорость компьютера &ndash; лишь одно из слагаемых. Даже самая быстрая машина начинает тормозить, когда не хватает оперативной памяти (RAM), а если на диске остается мало свободного пространства, Photoshop вообще отказывается работать. Итак, что считать достаточным? Это зависит от размера ваших файлов и производимых над ними манипуляций. Выбор платформы Основное различие между Маком и РС применительно к Photoshop, на наш взгляд, сводится к одному: если вы предпочитаете работать визуально, ориентируясь на экранное изображение, а не на числовые значения, то делать это удобнее на Маке. Дело в том, что разные платформы управляют монитором по-разному. Формирование Macintosh-системы для визуальной работы &ndash; задача непростая, но все же выполнимая. В Windows 98SE средства управления цветом гораздо эффективнее, чем в Windows 98, но само по себе это еще не повод для перехода на нее. Брюс, например, сумел создать Photoshop-систему для визуальной работы на базе Windows NT 4, которая вообще не имеет функций управления цветом. Ключевым условием здесь является надежный ICC-профиль монитора. И хотя на Маке выбор инструментов для создания таких профилей гораздо шире, чем на Windows, сформировать профиль можно на любой платформе, где работает Photoshop. Итог таков: если вы довольны своей платформой, переходить на другую нет смысла. Macintosh.</p>\r\n<p>Большинство операций в Photoshop связано со сложными вычислениями, поэтому очень важна скорость процессора вашего Мака. Photoshop 6 недвусмысленно требует моделей Power Macintosh. На машинах 680х0 она не работает, а на практике имеет смысл использовать, по крайней мере, модель G3 и предпочтительно G4, поскольку Photoshop очень эффективно использует ускоритель операций AltiVec модели G4. По состоянию на март 2001 Photoshop &ndash; одна из немногих программ, использующих преимущества новых двупроцессорных Power Мacintosh, а другим программам придется подождать, прежде чем в OS X появится многопроцессорная поддержка, но если вы все еще работаете на машине, выпущенной ранее модели G3 (в особенности со старым процессором системы 601), то вам, возможно, захочется опробовать один из ускорителей операций G3/G4 от независимых фирм или подумать о приобретении новой машины. Pentium III. Компьютеры на базе процессора Pentium III считаются рабочими лошадками для Photoshop.</p>\r\n<p>Современные процессоры Pentium III имеют встроенный набор команд ММХ, ускоряющий в 3-5 раз выполнение операций с интенсивными вычислениями, таких как нерезкое маскирование и преобразование из RGB в CMYK. Если у вас устаревший Pentium или Pentium Pro без ММХ, подумайте о модернизации процессора. Pentium Pro. Pentium Pro-системы работают значительно быстрее, чем Pentium II с той же тактовой частотой и больше подходят для Photoshop на платформе Windows. Все процессоры Pentium Pro нового поколения имеют расширение ММХ. Но чтобы получить полную отдачу от Pentium Pro или Pentium III, использовать его желательно с операционной системой Windows NT 4 или Windows 2000, которые являются полностью 32-разрядными. Многопроцессорные системы должны работать только с Windows NT или Windows 2000 &ndash; ни Windows 95, ни Windows 98 многопроцессорности не поддерживают.</p>', 'https://www.youtube.com/embed/cPAH9_T7f38', 'Photoshop – необыкновенно богатая программа, и эта книга призвана помочь вам научиться использовать ее возможности с максимальной эффективностью.', '2019-05-10 12:47:29', '2019-05-15 23:32:56'),
(2, 'Введение в физику', '<p><em><strong>Физика&nbsp;</strong>&ndash; наука о природе, изучающая наиболее простые и, вместе с тем, наиболее общие свойства и закономерности окружающего нас мира.&nbsp;</em>Что же изучает физика?</p>\r\n<p>Таяние льда и испарение воды, гром и молния, жар раскалённых предметов, образование тени или эха, поворот стрелки компаса, движение Луны и планет, плавание кораблей и полёты в космос &ndash; всё это примеры физических явлений в&nbsp;<em>неживой природе.&nbsp;</em>Но и в&nbsp;<em>живой природе&nbsp;</em>тоже постоянно происходят физические явления. Влага поднимается из земли к листьям по стеблю растения, кровь течёт по сосудам в теле животного, рыба скат наносит ощутимые удары током, температура тела млекопитающего может меняться, хамелеон способен изменять цвет, а некоторые бактерии или насекомые могут светиться. Физика изучает эти и многие другие явления.</p>\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"right\">\r\n<tbody>\r\n<tr>\r\n<td>&nbsp; &nbsp; &nbsp;&nbsp;<img title=\"Российский учёный Михаил Васильевич Ломоносов (1711-1765).\" src=\"http://fizika.ru/kniga/tema-01/p-01!-1.jpg\" alt=\"_?_\" /></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Физика зародилась очень давно. Ещё в древние времена люди пытались объяснить явления природы &ndash; восход и заход Солнца, Луны и звёзд, плавание малых предметов и больших кораблей и многое другое. В сочинениях одного из греческих мыслителей древности впервые и появилось слово<em>физика&nbsp;</em>(от греч. &laquo;фюзис&raquo; &ndash; природа). В русский язык это слово ввёл наш соотечественник М.В.Ломоносов, когда в XVIII веке издал в переводе с немецкого первый учебник физики.</p>\r\n<p><strong><em>Задача физики&nbsp;</em></strong><em>&ndash; открыть и описать на языке математики законы и закономерности,&nbsp;</em>которым подчиняются явления природы (то есть всего окружающего нас мира). В дальнейшем люди их применят для создания новых полезных устройств. Например, открытие законов и закономерностей электрических явлений позволило создать светильники, видеокамеры, телевизоры, микроволновые печи, телефоны, компьютеры и даже сеть Интернет, иногда называемую чудом XX века.</p>\r\n<p>Откройте эту книгу на любой странице. Вам потребуется совсем немного времени, чтобы отыскать&nbsp;<em>термины&nbsp;</em>&ndash; специальные слова, которыми пользуются в науке для краткости, определённости и удобства. Например, в этом тексте вам встретились термины &laquo;физика&raquo;, &laquo;физические явления&raquo;, &laquo;законы и закономерности&raquo;. Они встретятся вам ещё не раз, постепенно раскрываясь с разных сторон.</p>\r\n<p>Успехов вам в освоении физики!</p>', 'https://www.youtube.com/embed/cSt0QhUlHPs', 'величины, физика, деление', '2019-05-13 11:20:07', '2019-05-15 23:33:52'),
(3, 'Основные понятия кинематики', '<p>Механическое движение &ndash; это изменение с течением времени взаимного расположения тел или их частей.</p>\r\n<p>Кинематика изучает движение тел без рассмотрения причин, обусловливающих это движение.</p>\r\n<p>При описании механического движения используют физические модели материальной точки и абсолютно твердого тела.</p>\r\n<p>Материальная точка &ndash; тело, размерами и формой которого можно пренебречь в условиях решаемой задачи. Очевидно, что одно и то же тело в одних условиях можно рассматривать как материальную точку, а в других &ndash; только как протяженное тело. Абсолютно твердое тело (часто называют просто твердое тело) &ndash; система материальных точек, расстояние между которыми не меняется в процессе движения.</p>\r\n<p>Различные сложные случаи движения твердого тела можно представить как последовательную комбинацию двух основных видов движения:&nbsp;<br />а) поступательное движение &ndash; движение, при котором прямая, проходящая через две произвольные точки твердого тела, всегда остается параллельной своему первоначальному положению;&nbsp;<br />б) вращательное движение &ndash; движение, при котором все точки тела движутся по окружностям, центры которых лежат на одной прямой, называемой осью вращения, а сами окружности лежат в параллельных плоскостях.</p>\r\n<p>Определить положение тела в пространстве, а также изменение этого положения возможно только по отношению к другим телам. Обычно в системе тел выбирают одно, которое служит телом отсчета. Совокупность тела отсчета, связанной с ним системы координат и часов образует систему отсчета (СО). Это понятие является фундаментальным в физике, поскольку пространственно-временное описание движения не имеет смысла, пока не определена СО. Тело отсчета обычно совмещают с началом координат.</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/57366080.png\" alt=\"\" align=\"\" />&nbsp;<br />Рис.1.1. Фрагмент движения материальной точки в трехмерной декартовой системе координат</div>\r\n<p>На рис.1.1 показан фрагмент движения материальной точки в трехмерной декартовой системе координат (XYZ) из начального положения &ndash; (&bull;) А в конечное положение &ndash; (&bull;) В. Эти геометрические точки характеризуются соответственно радиусами-векторами r<sub>0</sub>&nbsp;и r<sub>1</sub>&nbsp;&ndash; векторами, проведенными из начала координат в указанные точки. Радиус-вектор любой точки может быть выражен через её координаты (x,y.z):</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\">r=xi+yj+zk</div>\r\n<p>Здесь i,j,k &ndash; единичные векторы (орты), направленные вдоль координатных осей OX, OY и OZ. Не трудно видеть, что r<sub>0</sub>&nbsp;и r<sub>1</sub>&nbsp;связаны между собой соотношением:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\">r<sub>1</sub>= r<sub>0</sub>+&Delta;r</div>\r\n<p>где &Delta;r - вектор, называемый перемещением. Модуль перемещения равен кратчайшему расстоянию между А и В. Совокупность точек пространства, через которые тело последовательно проходит во время своего движения, называется траекторией. В общем случае это может быть любая трехмерная кривая. В дальнейшем для простоты мы будем в основном рассматривать так называемое плоское движение, при котором траектория лежит в одной определенной плоскости. Длина участка траектории между точками А и В называется путь и обычно обозначается S или &Delta;S.</p>', 'https://www.youtube.com/embed/wdNIhrYuePU', 'механическое движение, точка, кинематика', '2019-05-22 08:03:39', '2019-05-22 08:03:39'),
(4, 'Скорость', '<p>Скорость &ndash; это векторная физическая величина, характеризующая быстроту перемещения тела в пространстве. Отношение вектора перемещения &Delta;r к отрезку времени &Delta;t, в течение которого это перемещение произошло, называют средней скоростью:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/12967268.png\" alt=\"\" align=\"\" /></div>\r\n<p>Переходя к пределу этого отношения, получим мгновенную скорость:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/14983392.png\" alt=\"\" align=\"\" /></div>\r\n<p>Таким образом, мгновенная скорость &ndash; векторная величина, определяемая как производная радиуса-вектора движущейся материальной точки по времени. Вектор мгновенной скорости направлен по касательной к траектории в сторону движения. Как и радиус-вектор, вектор скорости может быть разложен на составляющие по осям OX, OY и OZ:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\">v=v<sub>x</sub>i+v<sub>y</sub>j+v<sub>z</sub>k,</div>\r\n<p>где v<sub>x</sub>, v<sub>y/sub&gt;, v<sub>z</sub>&nbsp;- проекции вектора скорости на соответствующие оси. При этом они являются производными координат по времени:</sub></p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/84789890.png\" alt=\"\" align=\"\" /></div>\r\n<p>Модуль вектора скорости точки:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/83207007.png\" alt=\"\" align=\"\" /></div>\r\n<p>При решении многих практических задач используется также средняя путевая скорость &ndash; скалярная величина, равная отношению пройденного пути &Delta;S к интервалу времени &Delta;t, затраченного на его прохождение:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\">v<sub>ср</sub>=&Delta;S/&Delta;t</div>\r\n<p>Переходя к пределу при &Delta;t&rarr;0 и учитывая, что при этом элементарный путь dS бесконечно близок к модулю элементарного перемещения dr, получаем, что модуль мгновенной скорости равен первой производной пути по времени:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\">|v|=v=dS/dt =S\'</div>\r\n<p>Если известен вид зависимости v(t), то путь, пройденный точкой за промежуток времени от t<sub>1</sub>&nbsp;до t<sub>2</sub>, может быть найден путем интегрирования:</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/06346499.png\" alt=\"\" align=\"\" /></div>\r\n<p>Как известно из математического анализа, определенный интеграл численно равен площади фигуры, заключенной между графиком функции и осью аргумента. Поэтому, если задан график скорости, с его помощью может быть численно найден путь за интересующий нас отрезок времени (рис.1.2).</p>\r\n<p>&nbsp;</p>\r\n<div align=\"center\"><img src=\"http://testent.ucoz.ru/_pu/15/36502268.png\" alt=\"\" align=\"\" />&nbsp;<br />Рис.1.2. Путь за отрезок времени (t1, t2)&nbsp;</div>', 'https://www.youtube.com/embed/8fnhSURgFDk', 'скорость, мгновенная скорость', '2019-05-22 08:08:18', '2019-05-22 08:08:18'),
(5, 'Введение  в  1С Предприятие', '<p>Система 1С:Предприятие может работать в двух режимах. Первый называется \"1С:Предприятие\", второй - \"Конфигуратор\". Разработка прикладных решений ведется в конфигураторе, а их исполнение - то есть - работа пользователей с ними - в режиме 1С:Предприятие.</p>\r\n<p>Говоря о системе программ \"1С:Предприятие\" следует помнить, что существуют понятия \"платформа\" и \"конфигурация\". Платформа - это среда, в которой разрабатывают и исполняют конфигурации. А конфигурацию можно сравнить с набором команд, для исполнения которых нужна платформа.</p>\r\n<p>При запуске программы первым делом на экране появляется окно Запуск 1С:Предприятия (рис. 1.1). В нем нужно, во-первых, указать нужную конфигурацию, во-вторых - выбрать режим ее запуска. Если в списке пока нет информационных баз - запуск программы будет сопровождаться сообщением о том, что список информационных баз</p>\r\n<p>пуст и предложением добавить в него новую базу. 6 Основы разработки прикладных решений для 1С: Предприятие 8.1</p>\r\n<p><img src=\"https://stimul.kiev.ua/img/zapusk_1s_8.2_i_ee_pervonachalnye_ustanovki/zapusk_1s_8.2_i_ee_pervonachalnye_ustanovki_clip_image001.png\" alt=\"\" width=\"446\" height=\"346\" /></p>\r\n<p>Рис. 1.1. Окно запуска программы</p>\r\n<p>В области Информационные базы находится список подключенных информационных баз. В данный момент этот список пуст.</p>\r\n<p>Окно содержит следующие кнопки:</p>\r\n<p>1С:Предприятие. Запуск системы в режиме 1С:Предприятие.</p>\r\n<p>Конфигуратор. Запуск системы в режиме Конфигуратор.</p>\r\n<p>Добавить. Запуск процесса добавления в список новой информационной базы.</p>\r\n<p>Изменить. Открывает окно изменения параметров добавленной информационной базы.</p>\r\n<p>Удалить. Удаляет из списка информационную базу.</p>\r\n<p>Настройка. Позволяет настроить внешний вид списка Информационные базы, установить каталог для поиска шаблонов конфигураций и обновлений.</p>\r\n<p>Нажмем на кнопку Добавить (или ответим Да на вопрос о создании новой базы). Появится окно Добавление информационной базы/группы. Фактически, это мастер, который проводит вас через несколько шагов по добавлению базы в список (рис. 1.2).</p>\r\n<p>Здесь мы можем пойти двумя путями:</p>\r\n<p>Создание новой информационной базы.</p>\r\n<p>Добавление в список существующей информационной базы.</p>\r\n<p>&nbsp;</p>\r\n<p>Нас интересует именно первый пункт, так как мы должны будем создать базу для последующей разработки в ней учебной конфигурации. Выберем его и нажмем на кнопку Далее. Появится окно, где можно выбрать вариант создания новой информационной базы (рис. 1.3).</p>\r\n<p>&nbsp;<img src=\"https://sb-vnedr.ru/service/support/hot_line/instr_5_3.jpg\" alt=\"\" width=\"395\" height=\"375\" /></p>\r\n<p><strong>Рис. 1.3. Выбор способа создания базы</strong></p>\r\n<p>&nbsp;</p>\r\n<p>Если ранее вы устанавливали в систему шаблоны каких-либо конфигураций, их перечень можно будет найти в данном окне. Нас готовые конфигурации в данном курсе не интересуют, поэтому мы выбираем вариант создания информационной базы без конфигурации. Он предназначен либо для разработки новой конфигурации, либо для загрузки в пустую конфигурацию выгруженной ранее информационной базы или конфигурации из файла. Нажав в очередной раз кнопку Далее мы попадаем в следующее окно, которое служит для указания наименования и типа расположения базы (рис. 1.4).</p>\r\n<p>&nbsp;<img src=\"https://sb-vnedr.ru/service/support/hot_line/instr_5_11.jpg\" alt=\"\" width=\"395\" height=\"375\" /></p>\r\n<p><strong>Рис. 1.4. Указание наименования информационной базы и типа расположения 9 1.</strong></p>\r\n<p>&nbsp;</p>\r\n<p>В нашем случае наименованием будет \"Основы разработки\", тип расположения - На данном компьютере или на компьютере в локальной сети. Второй вариант используется в том случае, если вы имеете дело с сетевой версией программы и собираетесь разместить базу на сервере 1С:Предприятия.</p>\r\n<p>Нажав в очередной раз Далее, мы попадаем в последнее окно добавления информационной базы.</p>\r\n<p>Здесь мы задаем каталог информационной базы и язык.</p>\r\n<p>Нажмем Готово - будет создана пустая информационная база, в списке баз появится название новой базы.</p>\r\n<p>Обратите внимание на то, что по нажатию кнопки Удалить выделенная информационная база будет удалена лишь из списка стартового окна, но не из системы.</p>\r\n<p>В каталоге только что созданной пустой информационной базы (рис. 1.7) есть файл 1Cv8.1CD и папка 1Cv8Log. Файл - это и есть информационная база. Сейчас он имеет</p>\r\n<p>совсем небольшой размер - 256 Кб. Размер будет расти в ходе разработки конфигурации и ввода данных пользователями системы.</p>\r\n<p>Сейчас, после создания новой пустой конфигурации мы готовы к первому ее запуску в режиме конфигуратора. Выделим ее наименование и нажмем на кнопку Конфигуратор. Откроется окно конфигуратора - оно будет совершенно пустым. Выполним команду меню Конфигурация &gt; Открыть конфигурацию. В левой части окна появится дерево конфигурации.</p>\r\n<p>Деревом конфигурации вы будете постоянно пользоваться при разработке. Можно заметить, что в окне дерева конфигурации уже что-то есть, хотя выше мы создали новую пустую конфигурацию. Дело в том, что здесь представлены лишь пустые группы элементов, которые мы, при работе над нашей учебной конфигурацией, заполним соответствующими объектами.</p>\r\n<p>Конфигурация - это описание структуры данных, на основе которых строится работа пользователя с системой в режиме 1С:Предприятие.</p>\r\n<p>Предположим, нам нужно, чтобы пользователь мог ввести в систему некий документ, который имеет следующие графы (реквизиты, говоря языком 1С:Предприятия):</p>\r\n<p>Дата;</p>\r\n<p>Номер документа;</p>\r\n<p>Ответственное лицо;</p>\r\n<p>Сумма выручки;</p>\r\n<p>Для этого мы создаем (описываем) в режиме конфигуратора объект Документ, указываем набор его реквизитов, задаем типы данных для этих реквизитов, настраиваем экранные формы документа и другие параметры. В итоге, пользователь системы сможет работать с документом в режиме 1С:Предприятие.</p>\r\n<p>Нередко, говоря о разработке для платформы 1С:Предприятие, применяют термин \"программирование\". \"Программирование\" для 1С:Предприятия - это не только написание программного кода, но и работа в визуальном режиме - создание и настройка объектов, разработка экранных форм, работа с различными конструкторами, ускоряющими процесс разработки. Некоторые действия в ходе разработки можно совершить лишь в визуальном режиме.</p>\r\n<p>Прежде чем начинать изучение конфигурирования, опишем практическую ситуацию, которая легла в основу сквозного примера, а так же рассмотрим некоторые основные приемы работы, которые пригодятся нам в дальнейшем.</p>', 'https://www.youtube.com/embed/9-nCUO8w6rA', 'работа в 1С:Предприятие', '2019-05-22 11:39:27', '2019-05-22 11:39:27'),
(6, 'Основы работы в 1С Предприятие.', '<p class=\"Default\"><strong><em>Описание задачи. Создание объектов.</em></strong></p>\r\n<p>Мы будем рассматривать основы разработки прикладных конфигураций на примере автоматизации деятельности салона красоты \"Марина\". В салоне работают директор, администратор, мастера и другие сотрудники. Основная задача мастеров - оказание услуг клиентам. Салон закупает материалы у поставщиков. Материалы расходуются в ходе оказания услуг, а так же их можно продавать клиентам - физическим лицам или организациям.</p>\r\n<p>Мы автоматизируем деятельность салона. В частности, нужно автоматизировать учет материалов, учет деятельности мастеров, учет клиентов с возможностью назначения особых условий обслуживания для постоянных клиентов. Нужно автоматизировать расчет заработной платы для сотрудников, создать отчеты, которые позволят руководству анализировать эффективность деятельности салона. В ходе решения задачи мы столкнемся и со многими другими практическими ситуациями, требующими автоматизации.</p>\r\n<p>Мы не будем стремиться к созданию решения, которое можно будет использовать на практике. Наша основная задача - рассмотреть работу с объектами системы, использовав избранную предметную область для демонстрации возможностей и особенностей системы. Хотя, с другой стороны, нашу итоговую конфигурацию, после доработки, можно будет использовать на практике.</p>\r\n<p>Продолжим знакомство с Конфигуратором. А именно, приступим к изучению операций с объектами.</p>\r\n<p><strong><em>&nbsp;Создаем объекты </em></strong></p>\r\n<p>Первой операцией с объектами, которую мы освоим в Конфигураторе, будет создание объектов. Создать объект нужного вида можно несколькими способами. Например - вызвав контекстное меню группы объектов и выбрав в нем пункт <strong>Добавить</strong>.</p>\r\n<p>Обратите внимание на пиктограмму, которая сопровождает пункт меню. Такую же пиктограмму имеет кнопка <strong>Добавить </strong>на панели инструментов окна дерева конфигурации. Эта же команда продублирована в меню <strong>Действия</strong>.</p>\r\n<p>Обратите внимание на то, что одно и то же действие в Конфигураторе можно выполнить различными способами.</p>\r\n<p>Пока не будем выполнять описанную команду. В следующей лекции мы попрактикуемся в создании объектов и в других операциях с ними.</p>\r\n<p>Выше мы использовали понятие \"объект\", однако, не поясняли его. Если вы знакомы с объектно-ориентированной методологией программирования, понятие \"объект\" должно быть вам знакомо. Если нет - давайте рассмотрим простой пример, который позволит понять сущность объектов. Представьте себе, что конфигурация - это ноутбук. Ноутбук состоит из отдельных частей, связанных воедино, взаимодействующих друг с другом. Это - монитор, клавиатура, материнская плата, центральный процессор, оперативная память - список можно продолжать очень долго. Всѐ то, из чего состоит наш ноутбук, его детали - это объекты. Каждый объект обладает определенной функциональностью. Он может связываться каким-то образом с другими объектами, он имеет средства управления, может сообщать другим объектам о своем состоянии. В более широком смысле и ноутбук - это тоже объект. Им можно управлять, используя клавиатуру. Он может выводить сообщения с помощью монитора. Они составляют интерфейс, с помощью которого пользователь взаимодействует с ноутбуком.</p>\r\n<p>Итак, объект, это \"деталь\" конфигурации. Существуют объекты различных видов - их список можно видеть в окне дерева конфигурации.</p>\r\n<p>Сейчас рассмотрим некоторые другие не менее важные действия, которые выполняют в Конфигураторе.</p>\r\n<p><strong><em>Архивная копия информационной базы </em></strong></p>\r\n<p>Одна из важнейших сервисных операций, которую вам постоянно придется выполнять - это создание архивной копии информационной базы.</p>\r\n<p>Архивные копии рабочих баз нужно делать достаточно регулярно - для того, чтобы обезопасить себя от потери информации. Если вы собираетесь выполнить какую-нибудь операцию, которая может повлиять на нормальную работу конфигурации, например - обновить конфигурацию - прежде чем ее выполнять, вы должны обязательно сделать архивную копию информационной базы.</p>\r\n<p>Имейте в виду, что операция по архивированию информационной базы универсальна, как и многие другие операции в Конфигураторе. То есть - используя описанные команды вы сможете сделать архивную копию любой конфигурации, работающей на платформе 1С:Предприятие 8.</p>\r\n<p>Сделать архивную копию информационной базы можно несколькими способами.</p>\r\n<p>Первый из них заключается в обычном копировании или архивировании каталога с информационной базой.</p>\r\n<p>Второй способ - воспользоваться инструментами архивирования, встроенными в Конфигуратор. А именно, если выполнить команду меню <strong>Администрирование &gt; Выгрузить информационную базу</strong>, появится окно, которое содержит стандартный запрос о задании имени сохраняемого файла. В нашем случае это файл с расширением .DT. Он содержит архивную копию информационной базы. В случае повреждения или утери информационной базы вы можете восстановить ее из архивного файла командой <strong>Администрирование &gt; Загрузить информационную базу</strong>.</p>\r\n<p>Помните, что информационная база содержит не только конфигурацию, но и базу данных, которая формируется при работе пользователя с системой, то есть - данные, которые он вводит в систему в режиме 1С:Предприятие.</p>\r\n<p>При загрузке информационной базы из файла вы получаете то ее состояние, которое она имела на момент выгрузки. Изменения, сделанные после этого, теряются. Предположим, мы выгрузили информационную базу и после этого создали новый объект системы, ввели какие-то данные в пользовательском режиме. Если после этих действий загрузить ранее выгруженную информационную базу, окажется, что сделанные изменения утрачены.</p>\r\n<p><strong><em>Основная конфигурация и конфигурация базы данных </em></strong></p>\r\n<p>Информационная база хранит две конфигурации. Одна из них называется основной конфигурацией или просто конфигурацией. Именно ее мы правим в ходе работы с конфигуратором и именно ее открываем командой <strong>Конфигурация &gt; Открыть конфигурацию</strong>. Вторая конфигурация называется конфигурацией базы данных. Она используется в ходе работы пользователей. Редактировать основную конфигурацию можно в процессе работы пользователей с информационной базой. Для того, чтобы перенести изменения в конфигурацию базы данных, нужно, чтобы пользователи завершили работу с программой. Для того, чтобы открыть конфигурацию базы данных, выполните команду <strong>Конфигурация &gt; Конфигурация базы данных &gt; Открыть конфигурацию БД</strong>. Команды изменения объектов в окне конфигурации базы данных заблокированы.</p>\r\n<p>Если, открыв конфигурацию, мы внесем в нее изменения, например, создадим новый объект, в заголовке окна дерева конфигурации можно будет наблюдать значок: \"*\" (признак модифицированности конфигурации).</p>\r\n<p>Значок \"*\" означает, что внесенные изменения не сохранены в основной конфигурации. То есть он сигнализирует о том, что изменения, которые мы внесли на этапе конфигурирования, могут быть утеряны при, например, внезапном отключении питания.</p>\r\n<p>Для того, чтобы сохранить основную конфигурацию, нужно выполнить команду меню <strong>Конфигурация &gt; Сохранить конфигурацию</strong>. После сохранения значок модифицированности конфигурации исчезает, но появляется значок отличия конфигураций <strong>\"&lt;!&gt;\"</strong>.</p>\r\n<p>Знак отличия конфигураций указывает на то, что изменения, внесенные в основную конфигурацию, пока не внесены в конфигурацию базы данных.</p>\r\n<p>Для того, чтобы перенести изменения из основной конфигурации в конфигурацию базы данных, нужно выполнить команду <strong>Конфигурация &gt; Обновить конфигурацию базы данных</strong>. Если изменения, внесенные в основную конфигурацию не были сохранены до выполнения этой команды - система, перед обновлением конфигурации базы данных, предложит сначала сохранить изменения.</p>\r\n<p>При обновлении конфигурации базы данных система выводит окно с перечнем изменений, которые будут внесены в конфигурацию базы данных.</p>\r\n<p>Если вы согласны с перечнем изменений, нажмите на кнопку <strong>Принять</strong>, в противном случае - на кнопку <strong>Отмена</strong>.</p>\r\n<p>Признаки отличия конфигураций и модифицированности могут отображаться в заголовке окна дерева конфигурации одновременно. Если вы внесли изменения в конфигурацию, сохранили основную конфигурацию, не обновляя конфигурацию базы данных, а потом продолжили вносить изменения - оба значка отобразятся в заголовке окна. Если вы внесли изменения в основную конфигурацию, сохранили их, но еще не обновляли конфигурацию базы данных, вы можете вернуться к конфигурации базы данных, отменив изменения, сделанные в основной конфигурации. То есть, фактически, заменить основную конфигурацию конфигурацией базы данных. Для этого нужно выполнить команду <strong>Конфигурация &gt; Конфигурация базы данных &gt; Вернуться к конфигурации БД</strong>.</p>\r\n<p>Конфигурацию можно сохранять в файл и загружать из файла. Для сохранения основной конфигурации в файл выполните команду <strong>Конфигурация &gt; Сохранить конфигурацию в файл</strong>. Для загрузки конфигурации из файла выполните команду <strong>Конфигурация &gt; Загрузить конфигурацию из файла</strong>. Выгруженная конфигурация хранится в файле с расширением .CF.</p>\r\n<p>В файл можно выгружать не только основную конфигурацию, но и конфигурацию базы данных - это можно сделать командой <strong>Конфигурация &gt; Конфигурация базы данных &gt; Сохранить конфигурацию БД в файл</strong>.</p>\r\n<p>Обратите внимание на то, что выгружая информационную базу в файл, вы сохраняете в этом файле информационную базу целиком - то есть основную конфигурацию, конфигурацию базы данных и саму базу данных, которая содержит информацию, введенную пользователем в пользовательском режиме.</p>\r\n<p>Сохраняя конфигурацию в файл вы сохраняете лишь конфигурацию - структуру данных, которая используется для описания возможностей, доступных пользователю в режиме 1С:Предприятие.</p>\r\n<p><strong><em>&nbsp;Варианты запуска 1С:Предприятия из конфигуратора </em></strong></p>\r\n<p>В процессе правки конфигурации в режиме конфигуратора бывают моменты, когда нужно проверить функциональность разрабатываемого решения в режиме 1С:Предриятие. Конфигурацию можно открыть в этом режиме прямо из Конфигуратора, воспользовавшись командой <strong>Сервис &gt; 1С:Предприятие </strong>или соответствующей кнопкой на панели инструментов. При таком способе запуска программа будет работать точно так же, как она работала бы, если бы вы запустили ее в режиме 1С:Предприятие из стартового окна программы.</p>\r\n<p>Еще один режим запуска, доступный из Конфигуратора, предназначен для отладочных целей. Для того, чтобы открыть конфигурацию в режиме отладки, выполните команду <strong>Отладка &gt; Начать отладку </strong>или нажмите соответствующую кнопку.</p>\r\n<p>Если до попытки запуска системы 1С:Предприятие из Конфигуратора в конфигурацию были внесены изменения, не отраженные в конфигурации базы данных, перед запуском система уточнит, хотите ли вы обновить конфигурацию базы данных.</p>', 'https://www.youtube.com/embed/MngiBfNlED0', 'основы работы над программой', '2019-05-22 11:42:31', '2019-05-22 11:42:31'),
(7, 'Обзор объектов 1С:Предприятие 8.', '<p>В предыдущей лекции мы открыли Дерево конфигурации и могли видеть список объектов системы. Сейчас кратко рассмотрим эти объекты, поговорим об их основном предназначении.</p>\r\n<p>Все объекты системы можно разделить на три большие группы: Общие объекты, прикладные объекты и подчиненные объекты.</p>\r\n<p>Общие объекты (рис. 2.1) расположены в ветви дерева конфигурации Общие. Они играют вспомогательную роль при разработке конфигурации.</p>\r\n<p><img src=\"https://курсы-по-1с.рф/wp-content/uploads/2014/06/4.png\" alt=\"\" width=\"291\" height=\"633\" /></p>\r\n<p>Рис. 2.1. Общие объекты</p>\r\n<p>В частности, с их помощью можно управлять логической структурой разрабатываемой конфигурации, настраивать особенности взаимодействия пользователя с конфигурацией, они включают в себя объекты, которые могут быть настроены для совместного использования другими объектами конфигурации.</p>\r\n<p>Общие объекты играют вспомогательную, с точки зрения разработки прикладного решения роль. Результат их работы интересен скорее программисту, чем пользователю, хотя нельзя сказать, что эти объекты не участвуют в работе пользователя или неважны для целей решения прикладной задачи. Они - важная часть конфигурации. Дадим краткую характеристику этих объектов.</p>\r\n<p><strong>Подсистемы.</strong> Позволяют структурировать конфигурацию по видам решаемых с ее помощью задач. Например, если конфигурация решает задачи бухгалтерского учета и расчета зарплаты, логично будет создать две подсистемы. При создании новых объектов можно \"привязывать\" их к подсистемам в зависимости от их предназначения. Использование подсистем облегчает работу с большими конфигурациями.</p>\r\n<p><strong>Общие модули.</strong> Содержат процедуры и функции, доступные из других объектов. В этих модулях нельзя определять переменные.</p>\r\n<p><strong>Параметры сеанса</strong>. Они нужны, в основном, для настройки прав доступа к данным. Эти параметры устанавливаются при старте системы. Например, в этот параметр может быть записано имя пользователя, вошедшего в систему.</p>\r\n<p><strong>Роли.</strong> Роли. предназначены для настройки полномочий различных групп пользователей по доступу к данным. После создания и настройки роли ее можно назначить пользователю (для настройки списка пользователей применяют команду меню Администрирование &gt; Пользователи).</p>\r\n<p><strong>Планы обмена.</strong> Определяют правила обмена данными между информационными базами. Например, этот механизм можно использовать для обмена данными между головной организацией и филиалами или между подразделениями организации.</p>\r\n<p><strong>Критерии отбора.</strong> Позволяют создавать правила отбора, которые пользователь может применять при работе со списками данными в режиме 1С:Предприятие. Подписки на события. С помощью подписок на события можно назначать обработчики для событий объектов. Например, обработчик может быть вызван при копировании документа.</p>\r\n<p><strong>Регламентные задания.</strong> Регламентные задания позволяют выполнять различные операции по расписанию.</p>\r\n<p><strong>Общие формы.</strong> Эти формы могут быть использованы различными объектами для решения схожих задач.</p>\r\n<p><strong>Интерфейсы.</strong> Хранит пользовательские интерфейсы (главное меню, набор панелей инструментов), которые можно назначать различным пользователям. Каждый интерфейс можно оснастить лишь теми командами, которые нужны определенному пользователю.</p>\r\n<p><strong>Общие макеты.</strong> Хранит общие макеты (шаблоны печатных форм), которые доступны другим объектам конфигурации для формирования печатных вариантов электронных материалов.</p>\r\n<p><strong>Общие картинки.</strong> Хранит общедоступные картинки. Их можно, например, использовать в формах при настройке изображений на кнопках и в других случаях.</p>\r\n<p><strong>Пакеты XDTO. XML Data Transfer Object (XDTO</strong>) - это универсальный способ представления данных, который предназначен для организации взаимодействия с внешними программными системами. В частности, с другими конфигурациями 1С:Предприятия 8, с другими информационными системами.</p>\r\n<p><strong>WEB-сервисы.</strong> Здесь можно создать и настроить WEB-сервисы, которые обеспечивают экспорт функциональности конфигурации.</p>\r\n<p><strong>WS-ссылки</strong>. Содержит статические ссылки на опубликованные WEB-сервисы. Позволяет использовать функциональность этих сервисов.</p>\r\n<p><strong>Стили.</strong> Содержит наборы настроек форматирования, которые можно применить в ходе разработки. Например - с помощью механизма стилей можно быстро настроить форму заранее заданным образом. Языки. Позволяют задавать различные языки, на которых можно будет настраивать интерфейс программы. Если в системе задано несколько языков, при настройке объекта появляется возможность задавать некоторые параметры на разных языках. В итоге это приводит к тому, что интерфейс системы может существовать для различных языков.</p>\r\n<p><strong><em>Обзор объектов 1С:Предприятие 8: прикладные объекты</em></strong></p>\r\n<p>Прикладные объекты применяются для разработки прикладного решения. Именно эти объекты \"видны\" пользователю, который работает с большинством из них в режиме 1С:Предприятие. Дадим характеристику прикладных объектов (рис. 2.2).</p>\r\n<p><img src=\"https://www.intuit.ru/EDI/04_06_15_10/1433408623-6075/tutorial/668/objects/2/files/02_04.jpg\" alt=\"\" width=\"299\" height=\"470\" /></p>\r\n<p>Рис. 2.2. Прикладные объекты</p>\r\n<p><strong>Константы.</strong> Предназначены для хранения информации, которая либо не изменяется в ходе деятельности организации, либо изменяется очень редко. Например, в константе можно сохранить название организации, ФИО директора и другие подобные данные.</p>\r\n<p><strong>Справочники.</strong> Предназначены для хранения списков однотипных данных. Например, в справочниках хранят списки клиентов, сотрудников, товаров, материалов.</p>\r\n<p><strong>Документы.</strong> С их помощью информация попадает в систему. Документы могут выступать в качестве электронных аналогов первичных учетных документов. Вместе с документами используются такие объекты, как Нумераторы (для обеспечения сквозной нумерации различных документов) и Последовательности (для обеспечения правильной последовательности документов).</p>\r\n<p><strong>Журналы документов</strong>. Они используются для группировки документов различных видов.</p>\r\n<p><strong>Перечисления.</strong> Их применяют для хранения наборов значений, заданных в процессе конфигурирования и не изменяемых в ходе работы пользователя с конфигурацией.</p>\r\n<p><strong>Отчеты.</strong> Применяются для создания отчетов, которые являются средством представления выходных данных учетной системы.</p>\r\n<p><strong>Обработки.</strong> Предназначены для обработки информации, выполнения различных операций с данными.</p>\r\n<p><strong>Планы видов характеристик.</strong> Применяются для описания видов характеристик объектов.</p>\r\n<p><strong>Планы счетов.</strong> Используются для целей организации бухгалтерского учета. Представляют собой списки счетов учета. Применяются совместно с регистрами бухгалтерии.</p>\r\n<p><strong>Планы видов расчета.</strong> Используются для описания видов расчета и их взаимосвязей, применяются совместно с регистрами расчета.</p>\r\n<p><strong> Регистры сведений.</strong> Предназначены для накопления информации по нескольким измерениям с возможностью хранения истории изменения данных и с возможностью хранения нечисловых данных.</p>\r\n<p><strong>Регистры накопления.</strong> Предназначены для хранения данных в разрезе нескольких измерений, поддерживают получение информации об остатках и оборотах хранимых величин.</p>\r\n<p><strong>Регистры бухгалтерии.</strong> Хранят информацию о бухгалтерских операциях.</p>\r\n<p><strong>Регистры расчета.</strong> Хранят информацию о расчетах. Применяются, в основном, для целей расчета заработной платы.</p>\r\n<p><strong>Бизнес-процессы.</strong> Позволяют создавать структуры, автоматизирующие выполнение многошаговых операций. Например - движение документа между различными должностными лицами организации.</p>\r\n<p><strong>Задачи.</strong> Используются совместно с Бизнес-процессами. Нужны для ведения учета задач по исполнителям.</p>\r\n<p>&nbsp;</p>\r\n<p><strong><em>Обзор объектов 1С:Предприятие 8: подчиненные объекты</em></strong></p>\r\n<p>Подчиненные объекты подчинены другим объектам конфигурации. Например, на рис. 2.3 вы можете видеть объект конфигурации Документ, которому принадлежит несколько подчиненных объектов. Перечислим и опишем их.</p>\r\n<p><img src=\"http://1c-uroki.ru/sites/default/files/20_sozdanie_novogo_dokumenta_1s_predpriyatie_8.2.png\" alt=\"\" width=\"729\" height=\"691\" /></p>\r\n<p>Рис. 2.3. Объекты, подчиненные объекту Документ</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Реквизиты.</strong> Реквизиты позволяют добавлять объекту дополнительные свойства. Например, если нам нужно, чтобы в документ можно было ввести сумму операции, мы можем ввести в него соответствующий реквизит.</p>\r\n<p><strong>Табличные части.</strong> Используются в том случае, если в документ (или другой объект, которому подчинена табличная часть) нужно добавить произвольное количество записей (фактически - дополнительных свойств), оформленных в виде таблицы. Табличные части, в свою очередь, имеют реквизиты.</p>\r\n<p><strong>Формы.</strong> Формы используют для организации ввода и просмотра информации. В 1С:Предприятие 8 существует специальный редактор, который предназначен для разработки и модификации форм.</p>\r\n<p><strong>Макеты.</strong> Макеты применяют для описания печатных форм различных объектов. Макет содержит \"заготовки\", которые, при формировании печатной формы конкретного объекта заполняются данными.</p>\r\n<p>На рис. 2.4 представлены еще несколько подчиненных объектов - на этот раз - для прикладных объектов Журнал документов и Регистр накопления.</p>\r\n<p><img src=\"https://programmist1s.ru/wp-content/uploads/2013/01/registry-nakopleniya-265x300.png\" alt=\"\" width=\"265\" height=\"300\" /></p>\r\n<p>Рис. 2.4. Объекты, подчиненные объектам Журнал документов и Регистр накопления</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Графы.</strong> Графы журнала документов используются для отображения информации о документах, входящих в журнал.</p>\r\n<p><strong>Измерения.</strong> Измерения регистров - это объекты, в разрезе которых ведется учет показателей в регистрах.</p>\r\n<p><strong>Ресурсы.</strong> Ресурсы регистров используют для хранения данных, по которым ведется учет в регистре.</p>\r\n<p>Выше мы дали краткую характеристику объектам конфигурации. Вся наша дальнейшая работа будет посвящена изучению методов работы с этими объектами и с различными механизмами системы. Начнем более близкое знакомство с объектами системы с подсистем.</p>', 'https://www.youtube.com/embed/1c3i9a455QU', 'объекты в 1С:Предприятие', '2019-05-22 11:48:39', '2019-05-22 11:52:01');
INSERT INTO `lectures` (`id`, `name_lectures`, `description_lectures`, `url_lectures`, `short_desc`, `created_at`, `updated_at`) VALUES
(8, 'Основные понятия Web-технологий', '<p><strong>Сеть Сетей.</strong> Упрощенно Интернет можно представить себе как сеть связанных между собой и разбросанных по всему миру компьютеров, которые являются <em>узлами</em> или <em>серверами</em> Сети и на которых хранится информация. Сеть не является единым целым и никому не принадлежит, но при этом более мелкие сети, подключенные к Интернет, обслуживаются отдельными организациями - <em>провайдерами</em>, являющимися собственниками &ldquo;своего&rdquo; участка Сети и получающими плату за предоставление доступа к ней.</p>\r\n<p><strong>Как компьютер связан с Сетью</strong>. Различают два основных способа подключения к Сети:</p>\r\n<ul>\r\n<li>подключение с удаленной машины по выделенной или обычной телефонной линии посредством внешнего или встроенного в компьютер <em>модема</em>; связь с сервером провайдера осуществляется телефонным звонком через модем по указанному провайдером номеру; кроме номера телефона, для входа в сеть необходимы <em>логин</em> - то есть, регистрационное имя пользователя и пароль.</li>\r\n<li>подключение через локальную сеть; в этом случае машина связана с локальной сетью через установленную в системном блоке плату <em>сетевого адаптера</em>; скорость такого соединения значительно более высока, но компьютер должен быть физически подключен к локальной сети, что требует довольно дорогих коммуникаций и потому используется, в основном, в организациях и университетах.</li>\r\n</ul>\r\n<p><strong>Протоколы</strong><strong>.</strong> Компьютеры, подключенные к Интернет, могут быть различной архитектуры и с различным программным обеспечением. Совместимость достигается за счет использования коммуникационных <em>протоколов</em>, то есть, наборов правил, касающихся передачи информации по сетям. Работа Интернет основана на использовании протокола TCP/IP (Transmission Control Protocol &ndash; Internet Protocol). На самом деле под названием TCP/IP скрывается целое семейство протоколов, решающих те или иные частные задачи. Перечислим основные из них:</p>\r\n<ul>\r\n<li><em>Транспортные протоколы</em> TCP и UDP (User Datagram Protocol) управляют процессом передачи данных между машинами;</li>\r\n<li><em>Протоколы маршрутизации</em> IP, ICMP (Internet Control Message Protocol), RIP (Routing Information Protocol) обрабатывают адресацию данных, обеспечивают их физическую передачу и отвечают за выбор наилучшего маршрута до адресата;</li>\r\n<li><em>Протоколы поддержки сетевого адреса</em> DNS (Domain Name System), ARP (Address Resolution Protocol) обеспечивают идентификацию машины в сети по ее уникальному адресу (см. п.<a href=\"http://www.ngasu.nsk.su/prikl/inet.html#t104\">1.4</a>);</li>\r\n<li><em>Шлюзовые протоколы</em> EGP (Exterior Gateway Protocol), GCP (Gateway-to-gateway protocol), IGP (Interior Gateway Protocol) отвечают за передачу информации о маршрутизации данных и состоянии сети, а также обрабатывают данные для взаимодействия с локальными сетями;</li>\r\n<li><em>Протоколы прикладных сервисов</em> FTP (File Transmission Protocol), Telnet и др. &ndash; сетевые программы, обеспечивающие доступ к различным услугам и службам Сети &ndash; например, передаче файлов между компьютерами;</li>\r\n<li><em>Протокол SMTP</em> (Simple Mail Transfer Protocol) отвечает за передачу сообщений электронной почты.</li>\r\n</ul>\r\n<p><strong>IP-адреса</strong><strong>.</strong> Каждый компьютер, подключенный к Интернет, имеет уникальный адрес, называемый <em>IP-адресом</em> (читается &ldquo;ай-пи&rdquo;). IP-адрес машины может быть постоянным или каждый раз назначаться сервером при соединении с Сетью, но всегда один IP соответствует одной машине. IP-адрес имеет длину 4 байта (по сетевой терминологии <em>октета</em>) или 32 бита. IP-адрес &ndash; это набор из четырех чисел, разделенных точками, например 195.25.100.14. Но было неудобно запоминать эти адреса и была разработана методика, позволяющая присваивать ресурсам значащие имена, состоящие из символов латинского алфавита. Она получила название DNS &ndash; доменная система имен.</p>\r\n<p><strong>Доменные имена</strong><strong>.</strong></p>\r\n<p>Согласно DNS, все виртуальное пространство Интернета делится на так называемые домены &ndash; логические зоны, управляемые одним или несколькими специальными компьютерами, а иногда даже целыми вычислительными сетями. Самые крупные единицы DNS называют доменами первого уровня, они охватывают глобальные участки Интернета по географическому признаку и обозначаются двумя первыми буквами названия страны:</p>\r\n<p>fr - Франция</p>\r\n<p>de - Германия</p>\r\n<p>ru -&nbsp; Россия</p>\r\n<p>se -&nbsp; Швеция</p>\r\n<p>tm - Туркменистан</p>\r\n<p>Исключение составляют лишь специализированные домены, объединяющие ресурсы по признаку тематической направленности:</p>\r\n<p>com - коммерческие организации</p>\r\n<p>edu -&nbsp; образовательные организации</p>\r\n<p>org -&nbsp; некоммерческие организации</p>\r\n<p>gov - правительственные организации</p>\r\n<p>mil -&nbsp; военные организации (США)</p>\r\n<p>int -&nbsp;&nbsp; международные организации</p>\r\n<p>net -&nbsp; организации, предоставляющие сетевые услуги</p>\r\n<p>info- информационные ресурсы</p>\r\n<p>biz-&nbsp;&nbsp;&nbsp; бизнес ресурсы</p>\r\n<p>museum-музеи и выставочные центры.</p>\r\n<p>Одной ступенью ниже стоят домены второго уровня, то есть зоны, непосредственно подчиняющиеся вышестоящему домену. Их обозначения отделяются от домена первого уровня точкой. Домены второго уровня могут принадлежать различным организациям, как муниципальным, так и коммерческим. Например сервер Санкт-Петербурга будет иметь домен spb.ru.</p>\r\n<p>Существуют также домены третьего уровня, входящие в состав вышестоящего домена, например name.spb.ru. Реже встречаются домены четвертого, пятого и шестого уровня. Ресурс, не имеющий собственного домена, вызывается по адресу, который можно записать так:</p>\r\n<p>name.domain.zone/~folder/, где:</p>\r\n<p>name &ndash; домен третьего уровня,</p>\r\n<p>domain &ndash; второго,</p>\r\n<p>zone &ndash; первого,</p>\r\n<p>folder &ndash; имя папки на серверном компьютере, в которой размещающий составляющие данный ресурс файлы.</p>\r\n<p>Адресная строка в общем виде выглядит следующим образом: <a href=\"http://www/\">http://www</a>.domain.zone, где: http &ndash; указание на то, что требуемую информацию следует передавать по протоколу передачи гипертекстовых данных (FTP - доступ к файловым архивам, SMTP/POP3 - прием/передача почты, NNTP - конференции: публично доступная тематическая переписка), а аббревиатура WWW говорит о том, что пользователь запрашивает с сервера именно web-страницы (FTPДоступ к файловым архивам, анонимный/авторизованный; Gopher &ndash; текстовые данные, иерархически организованные; E-mail электронная почта; WAIS Archie &ndash; средства доступа к базам данных, содержащих сведения о файлах, доступных в Интернет; News &ndash; эхо &ndash; конференции: Публично доступная тематическая переписка; IRC;Telnet &ndash; терминальный доступ к удаленным серверам).</p>\r\n<p>Данная форма представления адреса носит название URL &ndash; универсальное обозначение местонахождения ресурса.</p>\r\n<p><strong>Всемирная паутина&rdquo; и другие службы Сети.</strong></p>\r\n<p>Сегодня для рядового пользователя слова &ldquo;Интернет&rdquo; и &ldquo;World Wide Web&rdquo; (Web, WWW) &ndash; синонимы. На самом деле WWW &ndash; ведущий, но не единственный <em>сервис</em> всемирной Сети. Интернет &ndash; не только &ldquo;сеть сетей&rdquo;, но и объединение нескольких служб, каждая из которых определяется собственным <em>протоколом прикладного уровня</em>, отвечающим за тот или иной способ взаимодействия с пользователем. Протоколы прикладного уровня работают именно на &ldquo;конечном этапе&rdquo; взаимодействия с пользователем, преобразуя полученную с помощью сетевых протоколов TCP/IP информацию в нечто, пригодное для восприятия человеком.</p>\r\n<p><strong>Web, HTTP, HTML</strong><strong>.</strong></p>\r\n<p>Итак, <em>World Wide Web</em> &ndash; ведущий сервис Интернет, постепенно вытесняющий или включающий в себя большинство других сетевых служб. Прикладной протокол, используемый в WWW, называется <em>HTTP</em> (Hypertext Transfer Protocol), что переводится как &ldquo;протокол передачи гипертекста&rdquo;, документы, составляющие содержание WWW, называются <em>Web-страницами</em>, а формат, с помощью которого подготавливаются Web-страницы, называется<em> HTML</em> (HyperText Markup Language) или &ldquo;язык разметки гипертекста&rdquo;. Под <em>гипертекстом</em> же в простейшем случае понимается текст, позволяющий не только последовательное прочтение, то есть, указателями-ссылками связанный с другими текстами.</p>\r\n<p>Формат HTML представляет собой достаточно простой набор команд, которые описывают структуру документа. HTML позволяет выделить в тексте отдельные логические части (заголовки, абзацы, списки и т.д.), поместить на Web-страницу отдельно подготовленную фотографию или картинку, организовать на странице ссылки для связи с другими документами, но не задает конкретные и точные атрибуты форматирования документа, как, например, Microsoft Word. Конкретный вид документа окончательно определяет только программа-<em>браузер</em> на Вашем компьютере. Необходимость именно такого подхода связана, опять же, с разнородностью аппаратного и программного обеспечения компьютеров, подключенных к Интернет. С точки зрения пользователя Windows, Web-страница &ndash; это просто файл типа *.htm или *.html, находящийся где-то на сервере Интернет или на жестком диске Вашей машины.</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Браузер</strong> (browser) &ndash; это программа для просмотра документов на Web-серверах и доступа к различным службам Интернет.</p>\r\n<p><strong>Гиперссылки</strong><strong>.</strong> Главное, что делает WWW &ldquo;всемирной паутиной&rdquo; &ndash; наличие на ее страницах <em>гиперссылок</em>.</p>\r\n<p>Гиперссылками (или просто ссылками) называют выделенные области документа, позволяющие перейти к другой его части или к другому документу в Сети. Поскольку многие из гипертекстовых документов включают в себя множество ссылок, каждый документ в Интернет потенциально связан с каждым.</p>\r\n<p>Гиперссылка состоит из \"внутренней\" части, то есть, URL адресуемого документа, и \"внешней\" части, видимой на экране и называемой <em>якорем</em> гиперссылки. Якорь гиперссылки может представлять из себя слово или группу слов, картинку или часть картинки. Если подвести указатель &ldquo;мыши&rdquo; к ссылке, он примет форму ладони с вытянутым указательным пальцем &ndash; и это самый надежный способ ее определить.</p>\r\n<p><strong>Поисковые серверы. </strong>Мощные <a href=\"http://ya.ru/\">поисковые серверы</a> непрерывно &ldquo;обыскивают&rdquo; Интернет, создавая и пополняя базы данных, содержащие информацию о том, в каких документах Сети встречаются те или иные ключевые слова. Таким образом, реально поиск происходит не по серверам Internet, что было бы нереализуемо технически, а по базе данных поисковой машины, и отсутствие подходящей информации, найденной по запросу, еще не означает, что ее нет в Сети - можно попробовать воспользоваться другим поисковым средством или каталогом ресурсов. Базы данных поискового сервера пополняются не только автоматически. На любой крупной поисковой машине есть возможность проиндексировать свой сайт и добавить его в базу данных. Преимущество поискового сервера &ndash; простота работы с ним, недостаток &ndash; низкая степень отбора документов по запросу.</p>\r\n<p>Поисковые системы (их так же поисковыми машинами) &ndash; это полностью автоматизированные интерактивные сервисные службы, осуществляющие поиск информации в Интернете по введенному пользователем текстовому запросу.</p>\r\n<p>Создав и разместив в сети какой-либо web-сайт, разработчик регистрирует его адрес в поисковой системе, т.е. вносит URL стартовой страницы в поле на поисковом сервере. После этого специальная программа поисковой машины, называемая роботом или спайдером (паук), просматривает данный документ, проходит по всем обнаруженным на нем гиперссылкам и вносит информацию об обнаруженных страницах в базу данных поисковой системы, которая носит название<em> индекса</em>. Этот процесс называется индексацией страниц. Как правило, индекс поискового сервера содержит только адрес web-страниц и краткую аннотацию, поясняющую их содержимое, почерпнутую из текста самих индексируемых документов. Спустя определенное время, робот автоматически проводит переиндексацию, чтобы удалить из базы данных устаревшие и более недействительные ссылки.</p>\r\n<p>Пользователь, обращаясь к услугам поисковой машины, просто вводит в поле текстового запроса ключевые слова или некую ключевую фразу, характеризующую предмет его интересов, после чего нажимает кнопку &laquo;Искать&raquo;. По данной команде поисковый сервер передает управление другой программе, которая называется <em>поисковым механизмом</em>. Эта программа сравнивает введенные пользователем ключевые слова с содержимым индекса, выявляя возможности соответствия.</p>\r\n<p>Для увеличения вероятности обнаружения интересующих пользователя данных наиболее продвинутые версии подобных программ могут самостоятельно просклонять и проспрягать ключевые слова, увеличив тем самым количество искомых словоформ.</p>\r\n<p>Ссылки на web-страницы, в описании которых поисковый механизм обнаруживает подобные слова, автоматически включается им в <em>файл отчета</em>. Этот файл представляется пользователю в виде перечня, содержащего гиперссылки на найденные ресурсы с краткими текстовыми аннотациями для каждой из них. Степень соответствия обнаруженных таким образом ссылок исходному запросу называется <em>релевантностью поиска</em>.</p>\r\n<p>Существуют серверы, осуществляющие поиск информации только на русском языке и только в русскоязычной части Интернета, есть службы, с помощью которых можно искать информацию только на англоязычных сайтах, а также &laquo;интернациональные&raquo; поисковые машины, индексирующие ресурсы на всем пространстве Интернета.</p>', 'https://www.youtube.com/embed/tiRIWEnvsPI', 'Интернет, понятия', '2019-05-22 12:01:06', '2019-05-22 12:01:06'),
(9, 'Знакомство с языком  HTML. Структура программы на языке HTML. Форматирование шрифта и абзаца.', '<p><strong>HTML</strong>&nbsp;(от&nbsp;англ.&nbsp;<em>HyperText Markup Language</em>&nbsp;&mdash; &laquo;язык&nbsp;гипертекстовой&nbsp;разметки&raquo;)&nbsp;&mdash; стандартный&nbsp;язык разметки&nbsp;документов во&nbsp;Всемирной паутине. Большинство&nbsp;веб-страниц&nbsp;содержат описание разметки на языке HTML (или&nbsp;XHTML). Язык HTML интерпретируется&nbsp;браузерами; полученный в результате интерпретации форматированный текст отображается на экране монитора компьютера или мобильного устройства.</p>\r\n<p>Язык HTML является приложением&nbsp;SGML&nbsp;(стандартного обобщённого языка разметки) и соответствует международному стандарту&nbsp;ISO&nbsp;8879.</p>\r\n<p>Язык&nbsp;XHTML&nbsp;является более строгим вариантом HTML, он следует всем ограничениям&nbsp;XML&nbsp;и, фактически, XHTML можно воспринимать как приложение языка XML к области разметки гипертекста.</p>\r\n<p>Во всемирной паутине HTML-страницы, как правило, передаются браузерам от сервера по протоколам&nbsp;HTTP&nbsp;или&nbsp;HTTPS, в виде простого текста или с использованием&nbsp;шифрования.</p>\r\n<p>Язык HTML был разработан&nbsp;британским&nbsp;учёным&nbsp;Тимом Бернерсом-Ли&nbsp;приблизительно в&nbsp;1986&mdash;1991 годах&nbsp;в стенах&nbsp;ЦЕРНа&nbsp;в&nbsp;Женеве&nbsp;в&nbsp;Швейцарии. HTML создавался как язык для обмена научной и технической документацией, пригодный для использования людьми, не являющимися специалистами в области&nbsp;вёрстки.</p>\r\n<p><strong>HTML</strong> является описательным языком разметки документов, в нем используются указатели разметки (<strong>теги</strong>). Теговая модель описывает документ как совокупность контейнеров, каждый из которых начинается и заканчивается тегами, то есть документ НТМL представляет собой не что иное, как обычный файл, с добавленными в него управляющими НТМL-кодами (тегами). В нем разрешено использовать только три управляющих символа: горизонтальную табуляцию, перевод каретки и перевод строки. Это облегчает взаимодействие с различными операционными системами.</p>\r\n<p>Теги НТМL-документов в большинстве своем просты и понятны, ибо они образованы с помощью общеупотребительных слов английского языка, понятных сокращений и обозначений. НТМL-тег состоит из имени, за которым может следовать необязательный список атрибутов тега. Текст тега заключается в угловые скобки (\"&lt;\" и \"&gt;\"). Простейший вариант тега &mdash; имя, заключенное в угловые скобки, напримерили . Для ряда тегов характерно наличие атрибутов (т.е. параметров тега), которые могут иметь конкретные значения, устанавливаемые автором для изменения функции тега.</p>\r\n<p>Атрибуты тега следуют за именем и отделяются друг от друга пробелами. Порядок записи атрибутов в теге значения не имеет. Атрибут тега состоит из имени, знака равенства и значения &ndash; <strong>language=&ldquo;</strong><strong>JavaScript&rdquo;</strong>. В тегах могут использоваться только символы латинского алфавита, а в значениях атрибутов &ndash; любые символы.&nbsp; Если значение атрибута &mdash; одно слово или число, то его можно просто указать после знака равенства, не выделяя дополнительно. Все остальные значения необходимо заключать в кавычки, особенно если они содержат несколько разделенных пробелами слов. Длина значения атрибута ограничена 1024 символами.&nbsp; Теги принято писать заглавными буквами, а атрибуты и их значения &ndash; прописными (например: <strong>&lt;</strong><strong>BODY </strong><strong>text=</strong><strong>black&gt;</strong>),&nbsp; это не учитывается программой , но облегчает прочтение кода.</p>\r\n<p>Для краткости и образности мы будем в ряде случаев вместо словосочетания \"элемент разметки\" применять термин \"контейнер\".</p>\r\n<p>Общая схема построения контейнера в формате HTML может быть записана в следующем виде:</p>\r\n<p><strong>\"контейнер\"= &lt;\"имя тега\" \"список атрибутов\"&gt; содержание контейнера </strong></p>\r\n<p>Следует отметить, что в литературе кроме термина \"контейнер\" еще используется и термин \"элемент\". Следует быть внимательным, чтобы не путать контейнер (например, BODY) и тег (BODY), используемый при формировании контейнера.</p>\r\n<p>Кроме тегов, элементами HTML являются CER (Character Entity Reference), они предназначены для представления специальных символов в документе HTML, которые могут быть неверно обработаны браузером. Предположим, создается документ HTML, речь в котором идет об элементах данного языка. Если указать имя тегапросто в документе, браузер может воспринять его как непосредственно старт-тег. Для вывода таких символов и используется CER.</p>\r\n<p>Гипертекст породил много специальных терминов:</p>\r\n<p><strong>Элемент </strong>&ndash; конструкция языка HTML. Это контейнер, содержащий данные и позволяющий отформатировать их определенным образом. Любая Web-страница представляет собой набор элементов. Одна из основных идей гипертекста &ndash; возможность вложения элементов.</p>\r\n<p><strong>Тег</strong> &ndash; начальный или конечным маркеры элемента. Теги определяют границы действия элементов и отделяют элементы друг от друга. В тексте Web-страницы теги заключаются в угловые скобки, а конечный тег всегда снабжается косой чертой.</p>\r\n<p><strong>Атрибут</strong> &ndash; параметр или свойство элемента. Это, по сути, переменная, которая имеет стандартное имя и которой может присваиваться определенный набор значений: стандартных или произвольных. Предполагается, что символьные значения атрибутов заключаются в прямые кавычки, но некоторые браузеры позволяют не использовать кавычки. Это объясняется тем, что тип атрибута всегда известен заранее. Атрибуты располагаются внутри начального тега и отделяются друг от друга пробелами.</p>\r\n<p><strong>Гиперссылка</strong> &ndash; фрагмент текста, который является указателем на другой файл или объект. Гиперссылки необходимы для того, чтобы обеспечить возможность перехода от данного документа к другому.</p>', 'https://www.youtube.com/embed/w1gt3BXGkbU', 'html, структура, абзацы', '2019-05-22 12:06:01', '2019-05-22 12:09:20');

-- --------------------------------------------------------

--
-- Структура таблицы `lecture_to_tests`
--

CREATE TABLE `lecture_to_tests` (
  `id` int(10) UNSIGNED NOT NULL,
  `lecture_id` int(11) NOT NULL,
  `tests_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `lecture_to_tests`
--

INSERT INTO `lecture_to_tests` (`id`, `lecture_id`, `tests_id`, `created_at`, `updated_at`) VALUES
(4, 1, 1, '2019-05-18 03:28:26', '2019-05-18 03:28:26'),
(5, 1, 2, '2019-05-18 03:29:46', '2019-05-18 03:29:46'),
(6, 1, 3, '2019-05-20 09:10:23', '2019-05-20 09:10:23'),
(7, 1, 4, '2019-05-20 09:11:45', '2019-05-20 09:11:45'),
(8, 1, 5, '2019-05-20 09:12:55', '2019-05-20 09:12:55'),
(9, 1, 6, '2019-05-20 09:14:34', '2019-05-20 09:14:34'),
(10, 1, 7, '2019-05-20 09:15:46', '2019-05-20 09:15:46'),
(11, 1, 8, '2019-05-20 09:17:26', '2019-05-20 09:17:26'),
(12, 1, 9, '2019-05-20 09:18:39', '2019-05-20 09:18:39'),
(13, 1, 10, '2019-05-20 11:18:37', '2019-05-20 11:18:37'),
(14, 2, 11, '2019-05-22 07:27:21', '2019-05-22 07:27:21'),
(15, 2, 12, '2019-05-22 07:28:08', '2019-05-22 07:28:08'),
(16, 2, 13, '2019-05-22 07:29:55', '2019-05-22 07:29:55'),
(17, 2, 14, '2019-05-22 07:31:35', '2019-05-22 07:31:35'),
(18, 2, 15, '2019-05-22 07:33:19', '2019-05-22 07:33:19'),
(19, 2, 16, '2019-05-22 07:34:34', '2019-05-22 07:34:34'),
(20, 2, 17, '2019-05-22 07:37:55', '2019-05-22 07:37:55'),
(21, 2, 18, '2019-05-22 07:39:11', '2019-05-22 07:39:11'),
(22, 2, 19, '2019-05-22 07:41:04', '2019-05-22 07:41:04'),
(23, 2, 20, '2019-05-22 07:46:20', '2019-05-22 07:46:20'),
(24, 3, 21, '2019-05-22 08:30:23', '2019-05-22 08:30:23'),
(25, 4, 22, '2019-05-22 10:22:40', '2019-05-22 10:22:40'),
(26, 4, 23, '2019-05-22 10:24:16', '2019-05-22 10:24:16'),
(27, 4, 24, '2019-05-22 10:25:49', '2019-05-22 10:25:49'),
(28, 4, 25, '2019-05-22 10:27:26', '2019-05-22 10:27:26'),
(29, 4, 26, '2019-05-22 10:27:46', '2019-05-22 10:27:46'),
(30, 4, 27, '2019-05-22 10:30:59', '2019-05-22 10:30:59'),
(31, 4, 28, '2019-05-22 10:34:28', '2019-05-22 10:34:28'),
(32, 4, 29, '2019-05-22 10:36:49', '2019-05-22 10:36:49'),
(33, 4, 30, '2019-05-22 10:39:49', '2019-05-22 10:39:49'),
(34, 4, 31, '2019-05-22 10:46:03', '2019-05-22 10:46:03'),
(35, 3, 32, '2019-05-22 10:49:32', '2019-05-22 10:49:32'),
(36, 3, 33, '2019-05-22 10:52:16', '2019-05-22 10:52:16'),
(37, 3, 34, '2019-05-22 10:54:05', '2019-05-22 10:54:05'),
(38, 3, 35, '2019-05-22 10:58:06', '2019-05-22 10:58:06'),
(39, 3, 36, '2019-05-22 11:01:55', '2019-05-22 11:01:55'),
(40, 3, 37, '2019-05-22 11:07:36', '2019-05-22 11:07:36'),
(41, 3, 38, '2019-05-22 11:11:11', '2019-05-22 11:11:11'),
(42, 3, 39, '2019-05-22 11:12:13', '2019-05-22 11:12:13'),
(43, 3, 40, '2019-05-22 11:17:01', '2019-05-22 11:17:01'),
(44, 4, 41, '2019-05-22 11:25:55', '2019-05-22 11:25:55');

-- --------------------------------------------------------

--
-- Структура таблицы `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1, '2014_10_12_000000_create_users_table', 1),
(2, '2014_10_12_100000_create_password_resets_table', 1),
(3, '2019_05_04_130621_create_roles_table', 1),
(4, '2019_05_07_174821_create_info_people_table', 2),
(5, '2019_05_07_202518_create_admin_infos_table', 3),
(6, '2019_05_07_202818_create_lectures_table', 3),
(7, '2019_05_07_202903_create_lecture_to_tests_table', 3),
(8, '2019_05_07_202948_create_user_to_lectures_table', 3),
(10, '2019_05_08_163756_create_subjects_table', 3),
(11, '2019_05_07_203040_create_testing_users_table', 4),
(12, '2019_05_07_204515_create_results_users_table', 5);

-- --------------------------------------------------------

--
-- Структура таблицы `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `results_users`
--

CREATE TABLE `results_users` (
  `id` int(10) UNSIGNED NOT NULL,
  `results` int(11) NOT NULL,
  `uncorrect` int(11) NOT NULL,
  `attempts` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `percentage` int(11) NOT NULL,
  `name_lectures` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `results_users`
--

INSERT INTO `results_users` (`id`, `results`, `uncorrect`, `attempts`, `user_id`, `percentage`, `name_lectures`, `created_at`, `updated_at`) VALUES
(1, 10, 0, 10, 1, 100, 'Формирование Photoshop-системы', NULL, NULL),
(2, 8, 2, 10, 5, 80, 'Формирование Photoshop-системы', NULL, NULL),
(3, 10, 0, 10, 6, 100, 'Формирование Photoshop-системы', NULL, NULL),
(5, 10, 0, 10, 1, 100, 'Введение в физику', '2019-05-22 18:18:07', '2019-05-22 18:18:07'),
(6, 10, 0, 10, 1, 100, 'Основные понятия кинематики', '2019-05-23 09:02:41', '2019-05-23 09:02:41'),
(9, 11, 0, 11, 1, 100, 'Скорость', '2019-05-23 09:07:26', '2019-05-23 09:07:26'),
(10, 11, 0, 11, 1, 100, 'Скорость', '2019-05-23 09:08:10', '2019-05-23 09:08:10'),
(11, 6, 4, 10, 5, 60, 'Введение в физику', '2019-05-23 09:14:51', '2019-05-23 09:14:51'),
(12, 7, 3, 10, 5, 70, 'Введение в физику', '2019-05-23 09:15:24', '2019-05-23 09:15:24'),
(13, 4, 6, 10, 5, 40, 'Основные понятия кинематики', '2019-05-23 09:16:25', '2019-05-23 09:16:25'),
(14, 9, 1, 10, 5, 90, 'Основные понятия кинематики', '2019-05-23 09:16:55', '2019-05-23 09:16:55'),
(15, 6, 5, 11, 5, 55, 'Скорость', '2019-05-23 09:18:31', '2019-05-23 09:18:31'),
(16, 8, 3, 11, 5, 73, 'Скорость', '2019-05-23 09:20:23', '2019-05-23 09:20:23'),
(17, 9, 2, 11, 6, 82, 'Скорость', '2019-05-23 09:21:49', '2019-05-23 09:21:49'),
(18, 7, 3, 10, 6, 70, 'Скорость', '2019-05-23 09:22:47', '2019-05-23 09:22:47'),
(19, 8, 2, 10, 6, 80, 'Основные понятия кинематики', '2019-05-23 09:23:24', '2019-05-23 09:23:24'),
(20, 7, 3, 10, 6, 70, 'Основные понятия кинематики', '2019-05-23 09:23:57', '2019-05-23 09:23:57'),
(21, 8, 2, 10, 6, 80, 'Введение в физику', '2019-05-23 09:24:53', '2019-05-23 09:24:53'),
(22, 8, 2, 10, 6, 80, 'Введение в физику', '2019-05-23 09:25:20', '2019-05-23 09:25:20'),
(23, 8, 2, 10, 7, 80, 'Формирование Photoshop-системы', '2019-05-23 09:31:05', '2019-05-23 09:31:05'),
(24, 9, 1, 10, 7, 90, 'Формирование Photoshop-системы', '2019-05-23 09:31:34', '2019-05-23 09:31:34'),
(25, 7, 3, 10, 7, 70, 'Введение в физику', '2019-05-23 09:32:11', '2019-05-23 09:32:11'),
(26, 9, 1, 10, 7, 90, 'Введение в физику', '2019-05-23 09:32:35', '2019-05-23 09:32:35'),
(27, 8, 2, 10, 7, 80, 'Основные понятия кинематики', '2019-05-23 09:33:10', '2019-05-23 09:33:10'),
(28, 7, 3, 10, 7, 70, 'Основные понятия кинематики', '2019-05-23 09:33:37', '2019-05-23 09:33:37'),
(29, 8, 3, 11, 7, 73, 'Скорость', '2019-05-23 09:34:21', '2019-05-23 09:34:21'),
(30, 7, 4, 11, 7, 64, 'Скорость', '2019-05-23 09:34:53', '2019-05-23 09:34:53'),
(31, 8, 2, 10, 8, 80, 'Формирование Photoshop-системы', '2019-05-23 09:38:19', '2019-05-23 09:38:19'),
(32, 8, 2, 10, 8, 80, 'Введение в физику', '2019-05-23 09:39:08', '2019-05-23 09:39:08'),
(33, 5, 5, 10, 8, 50, 'Основные понятия кинематики', '2019-05-23 09:39:48', '2019-05-23 09:39:48'),
(34, 8, 3, 11, 8, 73, 'Скорость', '2019-05-23 09:40:36', '2019-05-23 09:40:36');

-- --------------------------------------------------------

--
-- Структура таблицы `roles`
--

CREATE TABLE `roles` (
  `id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `roles_user` varchar(41) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Дамп данных таблицы `roles`
--

INSERT INTO `roles` (`id`, `user_id`, `roles_user`, `created_at`, `updated_at`) VALUES
(1, 1, 'Student', '2019-05-05 10:00:39', '2019-05-05 10:00:39'),
(2, 2, 'Admin', '2019-05-07 11:21:12', '2019-05-07 11:21:12'),
(3, 3, 'Admin', '2019-05-09 03:15:26', '2019-05-09 03:15:26'),
(19, 5, 'Student', '2019-05-21 13:33:08', '2019-05-21 13:33:08'),
(20, 6, 'Student', '2019-05-21 22:16:08', '2019-05-21 22:16:08'),
(21, 7, 'Student', '2019-05-23 03:27:59', '2019-05-23 03:27:59'),
(22, 8, 'Student', '2019-05-23 03:35:59', '2019-05-23 03:35:59');

-- --------------------------------------------------------

--
-- Структура таблицы `subjects`
--

CREATE TABLE `subjects` (
  `id` int(10) UNSIGNED NOT NULL,
  `subject_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `lecture_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `subjects`
--

INSERT INTO `subjects` (`id`, `subject_name`, `lecture_id`, `created_at`, `updated_at`) VALUES
(2, 'Photoshop', '1', '2019-05-11 11:44:13', '2019-05-11 11:44:13'),
(3, 'Физика', '2', '2019-05-13 12:03:27', '2019-05-13 12:03:27'),
(4, 'Среда 1С:Предприятие', '1', '2019-05-22 12:10:23', '2019-05-22 12:10:23'),
(5, 'Среда 1С:Предприятие', '1', '2019-05-22 12:10:37', '2019-05-22 12:10:37'),
(6, 'Среда 1С:Предприятие', '1', '2019-05-22 12:10:46', '2019-05-22 12:10:46'),
(7, 'Программирование в Интернет', '1', '2019-05-22 12:12:28', '2019-05-22 12:12:28'),
(8, 'Программирование в Интернет', '1', '2019-05-22 12:12:35', '2019-05-22 12:12:35'),
(10, 'Физика', '1', '2019-05-23 01:34:32', '2019-05-23 01:34:32'),
(11, 'Физика', '1', '2019-05-23 01:34:45', '2019-05-23 01:34:45');

-- --------------------------------------------------------

--
-- Структура таблицы `testing_users`
--

CREATE TABLE `testing_users` (
  `id` int(10) UNSIGNED NOT NULL,
  `question` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `optionA` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `optionB` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `optionC` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `optionD` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `correct_answer` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `testing_users`
--

INSERT INTO `testing_users` (`id`, `question`, `optionA`, `optionB`, `optionC`, `optionD`, `correct_answer`, `created_at`, `updated_at`) VALUES
(1, '<p><strong>Какой вид графики используется в Adobe Photoshop?</strong></p>', 'Фрактальный', 'Растровый', 'Векторный', 'Прямолинейный', 'Растровый', '2019-05-18 03:28:26', '2019-05-18 03:28:26'),
(2, '<p><strong>Выберите расширение графического файла</strong></p>', '.doc', '.exe', '. jpg', '.bak', '. jpg', '2019-05-18 03:29:46', '2019-05-18 03:29:46'),
(3, '<p><strong>С помощью какой команды можно изменить размер изображения, находящегося на каком-либо слое?</strong></p>', 'Размер холста', 'Размер изображения', 'Свободная трансформация', 'Объединить слои', 'Свободная трансформация', '2019-05-20 09:10:23', '2019-05-20 09:10:23'),
(4, '<p><strong>Какую клавишу нужно нажать для выхода из режима трансформации и применения изменений?</strong></p>', 'Ctrl', 'Alt', 'Tab', 'Enter', 'Enter', '2019-05-20 09:11:45', '2019-05-20 09:11:45'),
(5, '<p><strong>Какой инструмент Adobe Photoshop служит для выделения областей одного цвета?</strong></p>', 'Пипетка', 'Лассо', 'Волшебная палочка', 'Штамп', 'Волшебная палочка', '2019-05-20 09:12:54', '2019-05-20 09:12:54'),
(6, '<p><strong>Как называется инструмент, позволяющий залить изображение двумя плавно перетекающими друг в друга цветами?</strong></p>', 'Градиент', 'Заливка', 'Банка краски', 'Узор', 'Градиент', '2019-05-20 09:14:34', '2019-05-20 09:14:34'),
(7, '<p><strong>Какая комбинация клавиш соответствует команде меню Отмена выделения?</strong></p>', 'Shift+Ctrl+U', 'Ctrl+D', 'Ctrl+T', 'Shift+Ctrl+I', 'Ctrl+D', '2019-05-20 09:15:46', '2019-05-20 09:15:46'),
(8, '<p><strong>Режим Быстрая Маска позволяет:</strong></p>', 'Маскировать часть изображения', 'Вырезать часть изображения', 'Редактировать существующее выделение', 'Создавать новое выделение', 'Создавать новое выделение', '2019-05-20 09:17:26', '2019-05-20 09:17:26'),
(9, '<p><strong>Какое расширение файлов является в Adobe Photoshop основным?</strong></p>', '.JPG', '.PSD', '.BMP', '.GIF', '.PSD', '2019-05-20 09:18:39', '2019-05-20 09:18:39'),
(10, '<p><strong>Какой из параметров нельзя выбрать при создании нового изображения?</strong></p>', 'Ширина', 'Разрешение', 'Режим', 'Длина', 'Длина', '2019-05-20 11:18:37', '2019-05-20 11:18:37'),
(11, '<p><strong>На рычаг действует сила, равная 2 Н. Определите момент силы, если плечо 0,4 м.</strong></p>', '0,8 Н*м', '0,4 Н*м', '5 Н*м', 'Нет правильного ответа', '0,8 Н*м', '2019-05-22 07:27:21', '2019-05-22 07:27:21'),
(12, '<p><strong>По какой формуле можно определить работу?</strong></p>', 'F=mg', 'N=A/t', 'p=F/S', 'A=FS', 'A=FS', '2019-05-22 07:28:08', '2019-05-22 07:28:08'),
(13, '<p><strong>Выберите формулу момент силы?</strong></p>', 'М=Fl', 'A=FS', 'F=mgh', 'N=A/t', 'М=Fl', '2019-05-22 07:29:54', '2019-05-22 07:29:54'),
(14, '<p><strong>Какая физическая величина измеряется в Джоулях?</strong></p>', 'Сила', 'Момент силы', 'Мощность', 'Работа', 'Работа', '2019-05-22 07:31:35', '2019-05-22 07:31:35'),
(15, '<p><strong>Даёт ли какой-либо простой механизм выигрыш в работе, если да, то какой?</strong></p>', 'Рычаг', 'Подвижный блок', 'Неподвижный блок', 'Нет', 'Нет', '2019-05-22 07:33:19', '2019-05-22 07:33:19'),
(16, '<p><strong>Какая из перечисленных единиц является единицей измерения мощности?</strong></p>', 'Джоуль', 'Ватт', 'Ньютон', 'Паскаль', 'Ватт', '2019-05-22 07:34:33', '2019-05-22 07:34:33'),
(17, '<p><strong>Какие простые механизмы могут давать выигрыш в силе?</strong></p>', 'Подвижный блок', 'Неподвижный блок', 'Рычаг', 'Наклонная плоскость', 'Подвижный блок', '2019-05-22 07:37:55', '2019-05-22 07:37:55'),
(18, '<p><strong>Под действием силы 5 Н тело переместилось в направлении действия силы на 2 м. Какую работу (в Дж) совершила сила?</strong></p>', '5 Дж', '2 Дж', '10 Дж', '3 Дж', '10 Дж', '2019-05-22 07:39:11', '2019-05-22 07:39:11'),
(19, '<p><strong>При помощи подвижного блока рабочий поднимает на высоту 2 м груз весом 400 Н. Какова минимальная длина веревки (в метрах)?</strong></p>', '1 м', '0,5 м', '3 м', '2 м', '2 м', '2019-05-22 07:41:04', '2019-05-22 07:41:04'),
(20, '<p><strong>Что из перечисленного относится к физическим явлениям?</strong></p>', 'Молекула', 'Золото', 'Киллограмм', 'Плавление', 'Плавление', '2019-05-22 07:46:20', '2019-05-22 07:46:20'),
(21, '<p><strong>Какая единица длины принята в качестве основной в Международной системе?</strong></p>', '1 см', '1 мм', '1 м', '30 000 км', '1 м', '2019-05-22 08:30:23', '2019-05-22 08:30:23'),
(22, '<p><strong>Скорость &mdash; это физическая величина, которая показывает</strong></p>', 'Пройденный телом путь', 'Как быстро движется тело', 'Расстояние пройденное телом', 'Какой путь проходит тело за единицу времени', 'Какой путь проходит тело за единицу времени', '2019-05-22 10:22:40', '2019-05-22 10:22:40'),
(23, '<p><strong>Какая принята единица скорости в СИ?</strong></p>', 'Метр в секунду (м/с)', 'Сантиметр в секунду (см/с)', 'Километр в час (км/ч)', 'Миллиметр в секунду (мм/с)', 'Метр в секунду (м/с)', '2019-05-22 10:24:16', '2019-05-22 10:24:16'),
(24, '<p><strong>Найдите скорость (в м/с) равномерного в течение 1,5 мин по&shy;лёта воздушного шара, за которые он пролетел 540 м</strong></p>', '15 м/с', '6 м/с', '54 м/с', '10 м/с', '6 м/с', '2019-05-22 10:25:49', '2019-05-22 10:25:49'),
(25, '<p><strong>Какова скорость пешехода, преодолевающего ровным шагом расстояние 1,2 км за 20 мин?</strong></p>', '2 м/с', '2 км/ч', '1 м/с', '10 м/с', '1 м/с', '2019-05-22 10:27:26', '2019-05-22 10:27:26'),
(26, '<p><strong>Найдите скорость (в м/с) равномерного в течение 1,5 мин по&shy;лёта воздушного шара, за которые он пролетел 540 м</strong></p>', '15 м/с', '6 м/с', '54 м/с', '10 м/с', '6 м/с', '2019-05-22 10:27:46', '2019-05-22 10:27:46'),
(27, '<p><strong>Определите скорость (в м/с) равномерного скольжения конь&shy;кобежца, который за 5 мин проехал путь длиной 1,5 км</strong></p>', '5 м/с', '3 м/с', '300 м/с', '30 м/с', '5 м/с', '2019-05-22 10:30:59', '2019-05-22 10:30:59'),
(28, '<p><strong>Рассчитайте среднюю скорость движения поезда между двумя станциями, расстояние между которыми 30 км, если он, выйдя с одной станции, прибыл на другую через 30 мин</strong></p>', '1 м/с', '10 м/с', '≈ 1,67 м/с', '≈ 16,7 м/с', '≈ 16,7 м/с', '2019-05-22 10:34:28', '2019-05-22 10:34:28'),
(29, '<p><strong>Определите среднюю скорость автомобиля на пути длиной 300 км. Первую половину этого пути он прошёл за 1,5 ч, а вто&shy;рую за 2,5 ч</strong></p>', '80 км/ч', '40 км/ч', '60 км/ч', '75 км/ч', '75 км/ч', '2019-05-22 10:36:49', '2019-05-22 10:36:49'),
(30, '<p><strong>Одна из моделей европейского автомобиля &laquo;Феррари&raquo; дости&shy;гает скорости 360 км/ч. Какой путь пройдёт этот автомобиль за 10 мин с такой скоростью?</strong></p>', '10 км', '60 км', '36 км', '600 км', '60 км', '2019-05-22 10:39:49', '2019-05-22 10:39:49'),
(31, '<p><strong>Самый быстрый пока серийный американский автомобиль разгоняется примерно до 430 км/ч. Считая его скорость рав&shy;ной 400 км/ч, рассчитайте, сколько времени ему понадобится, чтобы проехать 40 км</strong></p>', '6 мин', '10 мин', '≈ 17 мин', '5 мин', '6 мин', '2019-05-22 10:46:03', '2019-05-22 10:46:03'),
(32, '<p><strong>Автобус проехал свой маршрут от станции до конечной оста&shy;новки за 0,8 ч со средней скоростью 32 км/ч. Чему равен его путь?</strong></p>', '32 км', '25,6 км', '40 км', '20 км', '25,6 км', '2019-05-22 10:49:32', '2019-05-22 10:49:32'),
(33, '<p><strong>Материальной точкой можно считать тело в случаях, если можно пренебречь</strong></p>', 'Только вращением тела', 'Только движением тела', 'Всеми размерами тела', 'Только формой тела', 'Всеми размерами тела', '2019-05-22 10:52:16', '2019-05-22 10:52:16'),
(34, '<p><strong>Система отсчёта состоит из</strong></p>', 'тела отсчёта и системы координат', 'системы координат и часов', 'тела отсчёта и часов', 'тела отсчёта, системы координат и часов', 'тела отсчёта, системы координат и часов', '2019-05-22 10:54:05', '2019-05-22 10:54:05'),
(35, '<p><strong>Какая единица времени является в Международной системе (СИ)</strong></p>', '1 сутки', '1 час', '1 с', '1 мин', '1 с', '2019-05-22 10:58:06', '2019-05-22 10:58:06'),
(36, '<p><strong>Какие из перечисленных величин являются векторными величинами: 1) путь; 2) перемещение; 3) скорость</strong></p>', 'Только 1', 'Только 3', '2 и 3', 'Только 2', '2 и 3', '2019-05-22 11:01:55', '2019-05-22 11:01:55'),
(37, '<p><strong>Автомобиль дважды проехал вокруг Алматы по кольцевой дороге, длина которой 109 км. Чему равна путь пройденной автомобилем I и модуль его перемещения S?</strong></p>', 'I = 109 км, S = 0', 'I = 218 км, S = 0', 'I = S = 218 км', 'I = S = 0', 'I = 218 км, S = 0', '2019-05-22 11:07:36', '2019-05-22 11:07:36'),
(38, '<p><strong>Решаются две задачи.</strong></p>\r\n<p><strong>Рассчитывается маневр стыковки двух косми&shy;ческих кораблей.</strong></p>\r\n<p><strong>Рассчитывается период обращения космичес&shy;ких кораблей вокруг Земли.</strong></p>\r\n<p><strong>В каком случае космические корабли можно рас&shy;сматривать как материальные точки?</strong></p>', 'Только в первом случае', 'Только во втором случае', 'В обоих случаях', 'Ни в первом, ни во втором случаях', 'Только во втором случае', '2019-05-22 11:11:11', '2019-05-22 11:11:11'),
(39, '<p><strong>Камень брошен из окна второго этажа с высоты 4 м и падает на землю на расстоянии 3 м от сте&shy;ны дома. Чему равен модуль перемещения камня?</strong></p>', '3 м', '5 м', '4 м', '7 м', '5 м', '2019-05-22 11:12:13', '2019-05-22 11:12:13'),
(40, '<p><strong>Спортсмен пробежал дистанцию 400 м и возвра&shy;тился к месту старта. Чему равен путь&nbsp;l, пройден&shy;ный спортсменом, и модуль его перемещения&nbsp;S?</strong></p>', 'I = S = 0 м', 'I = 400 м, S = 0 м', 'I = S = 400 м', 'I = 0 м, S = 400 м', 'I = S = 0 м', '2019-05-22 11:17:01', '2019-05-22 11:17:01'),
(41, '<p><strong>Одна из моделей европейского автомобиля &laquo;Феррари&raquo; дости&shy;гает скорости 360 км/ч. Какой путь пройдёт этот автомобиль за 10 мин с такой скоростью?</strong></p>', '10 км', '60 км', '36 км', '600 км', '60 км', '2019-05-22 11:25:55', '2019-05-22 11:25:55'),
(42, '<p><strong>По какой формуле можно определить работу</strong></p>', 'F=mg', 'N=A/t', 'p=F/S', 'A=FS', 'A=FS', '2019-05-22 11:53:15', '2019-05-22 11:53:15');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(10) UNSIGNED NOT NULL,
  `username` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `username`, `email`, `password`, `remember_token`, `created_at`, `updated_at`) VALUES
(1, 'murat_omiraliev', 'murat_omiraliev@mail.ru', '$2y$10$X/1jirYaE4/CNB9HSPc.g.o6vD.kji/DZ2x4vFPja7JfXsuU.Khhy', 'shumyCZ8PMU7wSQFiMpdfqUO1krr9TyUZ4C0v7JLpPpelg7ZjUntec1x5nQW', '2019-05-04 08:59:25', '2019-05-04 08:59:25'),
(2, 'admin', 'admin@admin.com', '$2y$10$RSuOPmmEYuOjzob8mRNzn.Br6Vtk06HoxkxZV0FMxzJEl.RpWzc7i', '4zKi9arMbVDFTIifdPDNZdjVp1Nmt2R2x50JqzjrhyA4fz0Ud4YI5SvKdIok', '2019-05-07 11:10:58', '2019-05-07 11:10:58'),
(3, 'leo_mihailov', 'leo_mihailov@gmail.com', '$2y$10$nDa2bxrc3cdFlKP76ooE7uBZhG/4UHP2L35HgbIgT6R7Fj/5ANc/e', 'alEqSWcpYxQPM0Pv02gV8Z8Nf9CxtANVxkR0e5v2bBJ0N4FzB1CHmHeCjH9m', '2019-05-09 03:14:22', '2019-05-09 03:14:22'),
(5, 'max_konoveev', 'max_konoveev@gmail.com', '$2y$10$iavuilrLhnCAIdOGeOxlFOWtJCeUns3VB1iIQWMrrGwFhHSa3nV6W', 'lyxID2j0nSLrW7etk9JF4iLiBEt4dhNeESbO0SNGGAAPv4DgLiYye5UI0ZHL', '2019-05-21 13:33:00', '2019-05-21 13:33:00'),
(6, 'roman_mihailov', 'roman_mihailov@gmail.com', '$2y$10$L9RH39PilYlUHALCuEcek.3Nszxse4ANpl/VtVHF31xnLCctiUYay', 'mMF6Wdsf7ZhS29rCTWL8qB75wzPZ2SMKvy0tb7xB3ep7cW3c26XzJ0gyz463', '2019-05-21 22:15:55', '2019-05-21 22:15:55'),
(7, 'sergei_romanenski', 'sergei_romanenski@gmail.com', '$2y$10$5EORlpLCFWfVIYmn9C4M6.nFTFNIEgC4PDSOsF5sOUKTdDobGeF/a', 'lHlFGw1x98TTzywjLKJrbfuIYegErociZYKYyk8crc6Oe6KflMTtz5pVC1Cf', '2019-05-23 03:27:49', '2019-05-23 03:27:49'),
(8, 'askhat_tanibergen', 'askhat_tanibergen@gmail.com', '$2y$10$6345TAgFSgkInPIyohBTLOTfB8aSPX21XHG4iqbFu2j2.ehfiL7pC', 'dxDBAJBSCHeeO3tHzTRsgH4KxoyYqL2a8ITIe3x1AC0dav7cMVocP52oYzuR', '2019-05-23 03:35:51', '2019-05-23 03:35:51');

-- --------------------------------------------------------

--
-- Структура таблицы `user_to_lectures`
--

CREATE TABLE `user_to_lectures` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `lectures_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `user_to_lectures`
--

INSERT INTO `user_to_lectures` (`id`, `user_id`, `lectures_id`, `created_at`, `updated_at`) VALUES
(1, 1, 1, NULL, NULL),
(2, 5, 1, NULL, NULL),
(3, 6, 1, NULL, NULL),
(6, 1, 2, NULL, NULL),
(7, 1, 3, NULL, NULL),
(10, 1, 4, NULL, NULL),
(11, 1, 4, NULL, NULL),
(12, 5, 2, NULL, NULL),
(13, 5, 2, NULL, NULL),
(14, 5, 3, NULL, NULL),
(15, 5, 3, NULL, NULL),
(16, 5, 4, NULL, NULL),
(17, 5, 4, NULL, NULL),
(18, 6, 4, NULL, NULL),
(19, 6, 4, NULL, NULL),
(20, 6, 3, NULL, NULL),
(21, 6, 3, NULL, NULL),
(22, 6, 2, NULL, NULL),
(23, 6, 2, NULL, NULL),
(24, 7, 1, NULL, NULL),
(25, 7, 1, NULL, NULL),
(26, 7, 2, NULL, NULL),
(27, 7, 2, NULL, NULL),
(28, 7, 3, NULL, NULL),
(29, 7, 3, NULL, NULL),
(30, 7, 4, NULL, NULL),
(31, 7, 4, NULL, NULL),
(32, 8, 1, NULL, NULL),
(33, 8, 2, NULL, NULL),
(34, 8, 3, NULL, NULL),
(35, 8, 4, NULL, NULL);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `admin_infos`
--
ALTER TABLE `admin_infos`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `info_people`
--
ALTER TABLE `info_people`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `lectures`
--
ALTER TABLE `lectures`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `lecture_to_tests`
--
ALTER TABLE `lecture_to_tests`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `password_resets`
--
ALTER TABLE `password_resets`
  ADD KEY `password_resets_email_index` (`email`);

--
-- Индексы таблицы `results_users`
--
ALTER TABLE `results_users`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `subjects`
--
ALTER TABLE `subjects`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `testing_users`
--
ALTER TABLE `testing_users`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`);

--
-- Индексы таблицы `user_to_lectures`
--
ALTER TABLE `user_to_lectures`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `admin_infos`
--
ALTER TABLE `admin_infos`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT для таблицы `info_people`
--
ALTER TABLE `info_people`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT для таблицы `lectures`
--
ALTER TABLE `lectures`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT для таблицы `lecture_to_tests`
--
ALTER TABLE `lecture_to_tests`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=47;

--
-- AUTO_INCREMENT для таблицы `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `results_users`
--
ALTER TABLE `results_users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=35;

--
-- AUTO_INCREMENT для таблицы `roles`
--
ALTER TABLE `roles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=23;

--
-- AUTO_INCREMENT для таблицы `subjects`
--
ALTER TABLE `subjects`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- AUTO_INCREMENT для таблицы `testing_users`
--
ALTER TABLE `testing_users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=43;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT для таблицы `user_to_lectures`
--
ALTER TABLE `user_to_lectures`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=36;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
